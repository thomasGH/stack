.action-errors
.question data={ question_id: @question.id, best_answer_id: @question.best_answer_id }
  - cache @question do
    h1.question_title= @question.title
    p.question_body= @question.body
  .q_sum
    = @question.votes_sum
    | &nbsp;votes&nbsp;
  - if can?(:vote_up, @question)
    p.q_voting
      = link_to 'Up', vote_up_question_path(@question), method: :post, remote: true
      | &nbsp;
      = link_to 'Down', vote_down_question_path(@question), method: :post, remote: true
  .author= @question.user.email
  - if can?(:manage, @question)
    = form_for @question, remote: true, html: { style: "display: none" } do |f|
      = f.text_field :title
      = f.text_area :body
      = f.submit 'Update'
    p= link_to 'Edit question', '#', class: 'edit_question_link'
    p= link_to 'Delete question', @question, class: 'delete_question_link', method: :delete, data: { confirm: "Are you sure?" }
  - if can?(:manage, SubscribersQuestion)
    - if current_user.subscribers_questions.where(question: @question).present?
      p.subscribe= link_to 'Unsubscribe', subscription_path, method: :delete, remote: true
    - else
      p.subscribe= link_to 'Subscribe', question_subscriptions_path(@question), method: :post, remote: true
  .question_attachment
    | Attachments:
    ul
      - @question.attachments.each do |a|
        li
          = link_to a.file_name, a.file.url
          - if can?(:manage, @question)
            = link_to ' (Delete attachment)', a, class: 'delete_question_attachment_link', method: :delete, remote: true, data: { confirm: "Are you sure?" }
hr
hr
h2= 'Answers'
- cache "#{@question}-answers" do
  .answers= render @question.answers
  - if can?(:create, Answer)
    h2 New answer
    = form_for [@question, @answer], remote: true, data: { type: :json } do |f|
      = f.label :body, 'Your answer'
      = f.text_area :body, id: 'new_answer_body'
      p Attachments:
      p
        = f.fields_for :attachments do |a|
          = a.label :file
          = a.file_field :file
      = f.submit 'Create'

= subscribe_to "/questions/#{@question.id}/answers"